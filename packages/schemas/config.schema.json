{
  "description": "Properties of a configuration file",
  "type": "object",
  "properties": {
    "extends": {
      "description": "File(s) to inherit from",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ]
    },
    "instruction": {
      "description": "Instruction to generate JSON schemas",
      "anyOf": [
        {
          "$ref": "#/definitions/MultiSymbolInstruction"
        },
        {
          "$ref": "#/definitions/SingleSymbolInstruction"
        }
      ]
    }
  },
  "required": [
    "instruction"
  ],
  "definitions": {
    "OutputDescriptor": {
      "description": "Formats of output JSON schema files",
      "type": "object",
      "properties": {
        "filename": {
          "description": "Name of output schema file",
          "type": "string"
        },
        "format": {
          "description": "Data format",
          "enum": [
            "json"
          ],
          "type": "string"
        },
        "indent": {
          "description": "JSON indentation",
          "anyOf": [
            {
              "enum": [
                "none",
                "tab"
              ],
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        }
      },
      "required": [
        "filename"
      ]
    },
    "MultiSymbolInstruction": {
      "description": "Instruction for multiple symbols",
      "type": "object",
      "properties": {
        "list": {
          "description": "List of instruction units",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SymbolInstruction"
          }
        },
        "output": {
          "type": "null"
        },
        "symbol": {
          "type": "null"
        },
        "compilerOptions": {
          "description": "Compiler options to pass to typescript-json-schema module",
          "type": "object",
          "additionalProperties": {},
          "properties": {
            "charset": {
              "description": "The character set of the input files.",
              "type": "string"
            },
            "composite": {
              "description": "Enables building for project references.",
              "type": "boolean"
            },
            "declaration": {
              "description": "Generates corresponding d.ts files.",
              "type": "boolean"
            },
            "declarationDir": {
              "description": "Specify output directory for generated declaration files. Requires TypeScript version 2.0 or later.",
              "type": "string"
            },
            "diagnostics": {
              "description": "Show diagnostic information.",
              "type": "boolean"
            },
            "emitBOM": {
              "description": "Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.",
              "type": "boolean"
            },
            "emitDeclarationOnly": {
              "description": "Only emit '.d.ts' declaration files.",
              "type": "boolean"
            },
            "incremental": {
              "description": "Enable incremental compilation.",
              "type": "boolean"
            },
            "tsBuildInfoFile": {
              "description": "Specify file to store incremental compilation information.",
              "type": "string"
            },
            "inlineSourceMap": {
              "description": "Emit a single file with source maps instead of having a separate file.",
              "type": "boolean"
            },
            "inlineSources": {
              "description": "Emit the source alongside the sourcemaps within a single file; requires --inlineSourceMap to be set.",
              "type": "boolean"
            },
            "jsx": {
              "description": "Specify JSX code generation: 'preserve', 'react', or 'react-native'.",
              "enum": [
                "preserve",
                "react",
                "react-native"
              ],
              "type": "string"
            },
            "reactNamespace": {
              "description": "Specifies the object invoked for createElement and __spread when targeting 'react' JSX emit.",
              "type": "string"
            },
            "listFiles": {
              "description": "Print names of files part of the compilation.",
              "type": "boolean"
            },
            "mapRoot": {
              "description": "Specifies the location where debugger should locate map files instead of generated locations",
              "type": "string"
            },
            "module": {
              "description": "Specify module code generation: 'None', 'CommonJS', 'AMD', 'System', 'UMD', 'ES6', 'ES2015' or 'ESNext'. Only 'AMD' and 'System' can be used in conjunction with --outFile. 'ES6' and 'ES2015' values may be used when targeting 'ES5' or lower.",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "AMD",
                    "CommonJS",
                    "ES2015",
                    "ES6",
                    "ESNext",
                    "None",
                    "System",
                    "UMD"
                  ],
                  "type": "string"
                }
              ]
            },
            "newLine": {
              "description": "Specifies the end of line sequence to be used when emitting files: 'crlf' (Windows) or 'lf' (Unix).",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "crlf",
                    "lf"
                  ],
                  "type": "string"
                }
              ]
            },
            "noEmit": {
              "description": "Do not emit output.",
              "type": "boolean"
            },
            "noEmitHelpers": {
              "description": "Do not generate custom helper functions like __extends in compiled output.",
              "type": "boolean"
            },
            "noEmitOnError": {
              "description": "Do not emit outputs if any type checking errors were reported.",
              "type": "boolean"
            },
            "noImplicitAny": {
              "description": "Warn on expressions and declarations with an implied 'any' type.",
              "type": "boolean"
            },
            "noImplicitThis": {
              "description": "Raise error on 'this' expressions with an implied any type.",
              "type": "boolean"
            },
            "noUnusedLocals": {
              "description": "Report errors on unused locals. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "noUnusedParameters": {
              "description": "Report errors on unused parameters. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "noLib": {
              "description": "Do not include the default library file (lib.d.ts).",
              "type": "boolean"
            },
            "noResolve": {
              "description": "Do not add triple-slash references or module import targets to the list of compiled files.",
              "type": "boolean"
            },
            "noStrictGenericChecks": {
              "description": "Disable strict checking of generic signatures in function types.",
              "type": "boolean"
            },
            "skipDefaultLibCheck": {
              "type": "boolean"
            },
            "skipLibCheck": {
              "description": "Skip type checking of declaration files. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "outFile": {
              "description": "Concatenate and emit output to single file.",
              "type": "string"
            },
            "outDir": {
              "description": "Redirect output structure to the directory.",
              "type": "string"
            },
            "preserveConstEnums": {
              "description": "Do not erase const enum declarations in generated code.",
              "type": "boolean"
            },
            "preserveSymlinks": {
              "description": "Do not resolve symlinks to their real path; treat a symlinked file like a real one.",
              "type": "boolean"
            },
            "preserveWatchOutput": {
              "description": "Keep outdated console output in watch mode instead of clearing the screen.",
              "type": "boolean"
            },
            "pretty": {
              "description": "Stylize errors and messages using color and context (experimental).",
              "type": "boolean"
            },
            "removeComments": {
              "description": "Do not emit comments to output.",
              "type": "boolean"
            },
            "rootDir": {
              "description": "Specifies the root directory of input files. Use to control the output directory structure with --outDir.",
              "type": "string"
            },
            "isolatedModules": {
              "description": "Unconditionally emit imports for unresolved files.",
              "type": "boolean"
            },
            "sourceMap": {
              "description": "Generates corresponding '.map' file.",
              "type": "boolean"
            },
            "sourceRoot": {
              "description": "Specifies the location where debugger should locate TypeScript files instead of source locations.",
              "type": "string"
            },
            "suppressExcessPropertyErrors": {
              "description": "Suppress excess property checks for object literals.",
              "type": "boolean"
            },
            "suppressImplicitAnyIndexErrors": {
              "description": "Suppress noImplicitAny errors for indexing objects lacking index signatures.",
              "type": "boolean"
            },
            "stripInternal": {
              "description": "Do not emit declarations for code that has an '@internal' annotation.",
              "type": "boolean"
            },
            "target": {
              "description": "Specify ECMAScript target version: 'ES3', 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ESNext'",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "ES2015",
                    "ES2016",
                    "ES2017",
                    "ES2018",
                    "ES2019",
                    "ES2020",
                    "ES3",
                    "ES5",
                    "ES6",
                    "ESNext"
                  ],
                  "type": "string"
                }
              ]
            },
            "watch": {
              "description": "Watch input files.",
              "type": "boolean"
            },
            "experimentalDecorators": {
              "description": "Enables experimental support for ES7 decorators.",
              "type": "boolean"
            },
            "emitDecoratorMetadata": {
              "description": "Emit design-type metadata for decorated declarations in source.",
              "type": "boolean"
            },
            "moduleResolution": {
              "description": "Specifies module resolution strategy: 'node' (Node) or 'classic' (TypeScript pre 1.6) .",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "Classic",
                    "Node"
                  ],
                  "type": "string"
                }
              ]
            },
            "allowUnusedLabels": {
              "description": "Do not report errors on unused labels.",
              "type": "boolean"
            },
            "noImplicitReturns": {
              "description": "Report error when not all code paths in function return a value.",
              "type": "boolean"
            },
            "noFallthroughCasesInSwitch": {
              "description": "Report errors for fallthrough cases in switch statement.",
              "type": "boolean"
            },
            "allowUnreachableCode": {
              "description": "Do not report errors on unreachable code.",
              "type": "boolean"
            },
            "forceConsistentCasingInFileNames": {
              "description": "Disallow inconsistently-cased references to the same file.",
              "type": "boolean"
            },
            "baseUrl": {
              "description": "Base directory to resolve non-relative module names.",
              "type": "string"
            },
            "paths": {
              "description": "Specify path mapping to be computed relative to baseUrl option.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "plugins": {
              "description": "List of TypeScript language server plugins to load. Requires TypeScript version 2.3 or later.",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {},
                "properties": {
                  "name": {
                    "description": "Plugin name.",
                    "type": "string"
                  }
                }
              }
            },
            "rootDirs": {
              "description": "Specify list of root directories to be used when resolving modules.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "typeRoots": {
              "description": "Specify list of directories for type definition files to be included. Requires TypeScript version 2.0 or later.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "types": {
              "description": "Type declaration files to be included in compilation. Requires TypeScript version 2.0 or later.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "traceResolution": {
              "description": "Enable tracing of the name resolution process.",
              "type": "boolean"
            },
            "allowJs": {
              "description": "Allow javascript files to be compiled.",
              "type": "boolean"
            },
            "noErrorTruncation": {
              "description": "Do not truncate error messages.",
              "type": "boolean"
            },
            "allowSyntheticDefaultImports": {
              "description": "Allow default imports from modules with no default export. This does not affect code emit, just typechecking.",
              "type": "boolean"
            },
            "noImplicitUseStrict": {
              "description": "Do not emit 'use strict' directives in module output.",
              "type": "boolean"
            },
            "listEmittedFiles": {
              "description": "Enable to list all emitted files. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "disableSizeLimit": {
              "description": "Disable size limit for JavaScript project. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "lib": {
              "description": "List of library files to be included in the compilation. Possible values are: 'ES5', 'ES6', 'ES2015', 'ES7', 'ES2016', 'ES2017', 'ES2018', 'ESNext', 'DOM', 'DOM.Iterable', 'WebWorker', 'ScriptHost', 'ES2015.Core', 'ES2015.Collection', 'ES2015.Generator', 'ES2015.Iterable', 'ES2015.Promise', 'ES2015.Proxy', 'ES2015.Reflect', 'ES2015.Symbol', 'ES2015.Symbol.WellKnown', 'ES2016.Array.Include', 'ES2017.object', 'ES2017.Intl', 'ES2017.SharedMemory', 'ES2017.String', 'ES2017.TypedArrays', 'ES2018.Intl', 'ES2018.Promise', 'ES2018.RegExp', 'ESNext.AsyncIterable', 'ESNext.Array', 'ESNext.Intl', 'ESNext.Symbol'. Requires TypeScript version 2.0 or later.",
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "enum": [
                      "DOM",
                      "DOM.Iterable",
                      "ES2015",
                      "ES2015.Collection",
                      "ES2015.Core",
                      "ES2015.Generator",
                      "ES2015.Iterable",
                      "ES2015.Promise",
                      "ES2015.Proxy",
                      "ES2015.Reflect",
                      "ES2015.Symbol",
                      "ES2015.Symbol.WellKnown",
                      "ES2016",
                      "ES2016.Array.Include",
                      "ES2017",
                      "ES2017.Intl",
                      "ES2017.Object",
                      "ES2017.SharedMemory",
                      "ES2017.String",
                      "ES2017.TypedArrays",
                      "ES2018",
                      "ES2018.AsyncIterable",
                      "ES2018.Intl",
                      "ES2018.Promise",
                      "ES2018.Regexp",
                      "ES2019",
                      "ES2019.Array",
                      "ES2019.Object",
                      "ES2019.String",
                      "ES2019.Symbol",
                      "ES2020",
                      "ES2020.String",
                      "ES2020.Symbol.WellKnown",
                      "ES5",
                      "ES6",
                      "ES7",
                      "ESNext",
                      "ESNext.Array",
                      "ESNext.AsyncIterable",
                      "ESNext.BigInt",
                      "ESNext.Intl",
                      "ESNext.Symbol",
                      "ScriptHost",
                      "WebWorker",
                      "WebWorker.ImportScripts"
                    ],
                    "type": "string"
                  }
                ]
              }
            },
            "strictNullChecks": {
              "description": "Enable strict null checks. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "maxNodeModuleJsDepth": {
              "description": "The maximum dependency depth to search under node_modules and load JavaScript files. Only applicable with --allowJs.",
              "type": "number"
            },
            "importHelpers": {
              "description": "Import emit helpers (e.g. '__extends', '__rest', etc..) from tslib. Requires TypeScript version 2.1 or later.",
              "type": "boolean"
            },
            "jsxFactory": {
              "description": "Specify the JSX factory function to use when targeting react JSX emit, e.g. 'React.createElement' or 'h'. Requires TypeScript version 2.1 or later.",
              "type": "string"
            },
            "alwaysStrict": {
              "description": "Parse in strict mode and emit 'use strict' for each source file. Requires TypeScript version 2.1 or later.",
              "type": "boolean"
            },
            "strict": {
              "description": "Enable all strict type checking options. Requires TypeScript version 2.3 or later.",
              "type": "boolean"
            },
            "strictBindCallApply": {
              "description": "Enable stricter checking of of the `bind`, `call`, and `apply` methods on functions.",
              "type": "boolean"
            },
            "downlevelIteration": {
              "description": "Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. Requires TypeScript version 2.3 or later.",
              "type": "boolean"
            },
            "checkJs": {
              "description": "Report errors in .js files. Requires TypeScript version 2.3 or later.",
              "type": "boolean"
            },
            "strictFunctionTypes": {
              "description": "Disable bivariant parameter checking for function types. Requires TypeScript version 2.6 or later.",
              "type": "boolean"
            },
            "strictPropertyInitialization": {
              "description": "Ensure non-undefined class properties are initialized in the constructor. Requires TypeScript version 2.7 or later.",
              "type": "boolean"
            },
            "esModuleInterop": {
              "description": "Emit '__importStar' and '__importDefault' helpers for runtime babel ecosystem compatibility and enable '--allowSyntheticDefaultImports' for typesystem compatibility. Requires TypeScript version 2.7 or later.",
              "type": "boolean"
            },
            "allowUmdGlobalAccess": {
              "description": "Allow accessing UMD globals from modules.",
              "type": "boolean"
            },
            "keyofStringsOnly": {
              "description": "Resolve 'keyof' to string valued property names only (no numbers or symbols). Requires TypeScript version 2.9 or later.",
              "type": "boolean"
            },
            "useDefineForClassFields": {
              "description": "Emit ECMAScript standard class fields. Requires TypeScript version 3.7 or later.",
              "type": "boolean"
            },
            "declarationMap": {
              "description": "Generates a sourcemap for each corresponding '.d.ts' file. Requires TypeScript version 2.9 or later.",
              "type": "boolean"
            },
            "resolveJsonModule": {
              "description": "Include modules imported with '.json' extension. Requires TypeScript version 2.9 or later.",
              "type": "boolean"
            }
          }
        },
        "schemaSettings": {
          "description": "Settings to pass to typescript-json-schema module",
          "$ref": "#/definitions/Partial<Args>"
        },
        "input": {
          "description": "TypeScript source file(s)",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "SymbolInstruction": {
      "description": "Instruction for a single symbol",
      "type": "object",
      "properties": {
        "output": {
          "description": "Output descriptor(s) and filename(s)",
          "anyOf": [
            {
              "$ref": "#/definitions/OutputDescriptor"
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OutputDescriptor"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "symbol": {
          "description": "Targeted type name",
          "type": "string"
        }
      },
      "required": [
        "output",
        "symbol"
      ]
    },
    "Partial<Args>": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "boolean"
        },
        "aliasRef": {
          "type": "boolean"
        },
        "topRef": {
          "type": "boolean"
        },
        "titles": {
          "type": "boolean"
        },
        "defaultProps": {
          "type": "boolean"
        },
        "noExtraProps": {
          "type": "boolean"
        },
        "propOrder": {
          "type": "boolean"
        },
        "typeOfKeyword": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        },
        "strictNullChecks": {
          "type": "boolean"
        },
        "ignoreErrors": {
          "type": "boolean"
        },
        "out": {
          "type": "string"
        },
        "validationKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludePrivate": {
          "type": "boolean"
        },
        "uniqueNames": {
          "type": "boolean"
        },
        "rejectDateType": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "defaultNumberType": {
          "enum": [
            "integer",
            "number"
          ],
          "type": "string"
        }
      }
    },
    "SingleSymbolInstruction": {
      "description": "Instruction for a single symbol",
      "type": "object",
      "properties": {
        "list": {
          "type": "null"
        },
        "compilerOptions": {
          "description": "Compiler options to pass to typescript-json-schema module",
          "type": "object",
          "additionalProperties": {},
          "properties": {
            "charset": {
              "description": "The character set of the input files.",
              "type": "string"
            },
            "composite": {
              "description": "Enables building for project references.",
              "type": "boolean"
            },
            "declaration": {
              "description": "Generates corresponding d.ts files.",
              "type": "boolean"
            },
            "declarationDir": {
              "description": "Specify output directory for generated declaration files. Requires TypeScript version 2.0 or later.",
              "type": "string"
            },
            "diagnostics": {
              "description": "Show diagnostic information.",
              "type": "boolean"
            },
            "emitBOM": {
              "description": "Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.",
              "type": "boolean"
            },
            "emitDeclarationOnly": {
              "description": "Only emit '.d.ts' declaration files.",
              "type": "boolean"
            },
            "incremental": {
              "description": "Enable incremental compilation.",
              "type": "boolean"
            },
            "tsBuildInfoFile": {
              "description": "Specify file to store incremental compilation information.",
              "type": "string"
            },
            "inlineSourceMap": {
              "description": "Emit a single file with source maps instead of having a separate file.",
              "type": "boolean"
            },
            "inlineSources": {
              "description": "Emit the source alongside the sourcemaps within a single file; requires --inlineSourceMap to be set.",
              "type": "boolean"
            },
            "jsx": {
              "description": "Specify JSX code generation: 'preserve', 'react', or 'react-native'.",
              "enum": [
                "preserve",
                "react",
                "react-native"
              ],
              "type": "string"
            },
            "reactNamespace": {
              "description": "Specifies the object invoked for createElement and __spread when targeting 'react' JSX emit.",
              "type": "string"
            },
            "listFiles": {
              "description": "Print names of files part of the compilation.",
              "type": "boolean"
            },
            "mapRoot": {
              "description": "Specifies the location where debugger should locate map files instead of generated locations",
              "type": "string"
            },
            "module": {
              "description": "Specify module code generation: 'None', 'CommonJS', 'AMD', 'System', 'UMD', 'ES6', 'ES2015' or 'ESNext'. Only 'AMD' and 'System' can be used in conjunction with --outFile. 'ES6' and 'ES2015' values may be used when targeting 'ES5' or lower.",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "AMD",
                    "CommonJS",
                    "ES2015",
                    "ES6",
                    "ESNext",
                    "None",
                    "System",
                    "UMD"
                  ],
                  "type": "string"
                }
              ]
            },
            "newLine": {
              "description": "Specifies the end of line sequence to be used when emitting files: 'crlf' (Windows) or 'lf' (Unix).",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "crlf",
                    "lf"
                  ],
                  "type": "string"
                }
              ]
            },
            "noEmit": {
              "description": "Do not emit output.",
              "type": "boolean"
            },
            "noEmitHelpers": {
              "description": "Do not generate custom helper functions like __extends in compiled output.",
              "type": "boolean"
            },
            "noEmitOnError": {
              "description": "Do not emit outputs if any type checking errors were reported.",
              "type": "boolean"
            },
            "noImplicitAny": {
              "description": "Warn on expressions and declarations with an implied 'any' type.",
              "type": "boolean"
            },
            "noImplicitThis": {
              "description": "Raise error on 'this' expressions with an implied any type.",
              "type": "boolean"
            },
            "noUnusedLocals": {
              "description": "Report errors on unused locals. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "noUnusedParameters": {
              "description": "Report errors on unused parameters. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "noLib": {
              "description": "Do not include the default library file (lib.d.ts).",
              "type": "boolean"
            },
            "noResolve": {
              "description": "Do not add triple-slash references or module import targets to the list of compiled files.",
              "type": "boolean"
            },
            "noStrictGenericChecks": {
              "description": "Disable strict checking of generic signatures in function types.",
              "type": "boolean"
            },
            "skipDefaultLibCheck": {
              "type": "boolean"
            },
            "skipLibCheck": {
              "description": "Skip type checking of declaration files. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "outFile": {
              "description": "Concatenate and emit output to single file.",
              "type": "string"
            },
            "outDir": {
              "description": "Redirect output structure to the directory.",
              "type": "string"
            },
            "preserveConstEnums": {
              "description": "Do not erase const enum declarations in generated code.",
              "type": "boolean"
            },
            "preserveSymlinks": {
              "description": "Do not resolve symlinks to their real path; treat a symlinked file like a real one.",
              "type": "boolean"
            },
            "preserveWatchOutput": {
              "description": "Keep outdated console output in watch mode instead of clearing the screen.",
              "type": "boolean"
            },
            "pretty": {
              "description": "Stylize errors and messages using color and context (experimental).",
              "type": "boolean"
            },
            "removeComments": {
              "description": "Do not emit comments to output.",
              "type": "boolean"
            },
            "rootDir": {
              "description": "Specifies the root directory of input files. Use to control the output directory structure with --outDir.",
              "type": "string"
            },
            "isolatedModules": {
              "description": "Unconditionally emit imports for unresolved files.",
              "type": "boolean"
            },
            "sourceMap": {
              "description": "Generates corresponding '.map' file.",
              "type": "boolean"
            },
            "sourceRoot": {
              "description": "Specifies the location where debugger should locate TypeScript files instead of source locations.",
              "type": "string"
            },
            "suppressExcessPropertyErrors": {
              "description": "Suppress excess property checks for object literals.",
              "type": "boolean"
            },
            "suppressImplicitAnyIndexErrors": {
              "description": "Suppress noImplicitAny errors for indexing objects lacking index signatures.",
              "type": "boolean"
            },
            "stripInternal": {
              "description": "Do not emit declarations for code that has an '@internal' annotation.",
              "type": "boolean"
            },
            "target": {
              "description": "Specify ECMAScript target version: 'ES3', 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ESNext'",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "ES2015",
                    "ES2016",
                    "ES2017",
                    "ES2018",
                    "ES2019",
                    "ES2020",
                    "ES3",
                    "ES5",
                    "ES6",
                    "ESNext"
                  ],
                  "type": "string"
                }
              ]
            },
            "watch": {
              "description": "Watch input files.",
              "type": "boolean"
            },
            "experimentalDecorators": {
              "description": "Enables experimental support for ES7 decorators.",
              "type": "boolean"
            },
            "emitDecoratorMetadata": {
              "description": "Emit design-type metadata for decorated declarations in source.",
              "type": "boolean"
            },
            "moduleResolution": {
              "description": "Specifies module resolution strategy: 'node' (Node) or 'classic' (TypeScript pre 1.6) .",
              "anyOf": [
                {
                  "type": "object",
                  "additionalProperties": {}
                },
                {
                  "enum": [
                    "Classic",
                    "Node"
                  ],
                  "type": "string"
                }
              ]
            },
            "allowUnusedLabels": {
              "description": "Do not report errors on unused labels.",
              "type": "boolean"
            },
            "noImplicitReturns": {
              "description": "Report error when not all code paths in function return a value.",
              "type": "boolean"
            },
            "noFallthroughCasesInSwitch": {
              "description": "Report errors for fallthrough cases in switch statement.",
              "type": "boolean"
            },
            "allowUnreachableCode": {
              "description": "Do not report errors on unreachable code.",
              "type": "boolean"
            },
            "forceConsistentCasingInFileNames": {
              "description": "Disallow inconsistently-cased references to the same file.",
              "type": "boolean"
            },
            "baseUrl": {
              "description": "Base directory to resolve non-relative module names.",
              "type": "string"
            },
            "paths": {
              "description": "Specify path mapping to be computed relative to baseUrl option.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "plugins": {
              "description": "List of TypeScript language server plugins to load. Requires TypeScript version 2.3 or later.",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {},
                "properties": {
                  "name": {
                    "description": "Plugin name.",
                    "type": "string"
                  }
                }
              }
            },
            "rootDirs": {
              "description": "Specify list of root directories to be used when resolving modules.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "typeRoots": {
              "description": "Specify list of directories for type definition files to be included. Requires TypeScript version 2.0 or later.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "types": {
              "description": "Type declaration files to be included in compilation. Requires TypeScript version 2.0 or later.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "traceResolution": {
              "description": "Enable tracing of the name resolution process.",
              "type": "boolean"
            },
            "allowJs": {
              "description": "Allow javascript files to be compiled.",
              "type": "boolean"
            },
            "noErrorTruncation": {
              "description": "Do not truncate error messages.",
              "type": "boolean"
            },
            "allowSyntheticDefaultImports": {
              "description": "Allow default imports from modules with no default export. This does not affect code emit, just typechecking.",
              "type": "boolean"
            },
            "noImplicitUseStrict": {
              "description": "Do not emit 'use strict' directives in module output.",
              "type": "boolean"
            },
            "listEmittedFiles": {
              "description": "Enable to list all emitted files. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "disableSizeLimit": {
              "description": "Disable size limit for JavaScript project. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "lib": {
              "description": "List of library files to be included in the compilation. Possible values are: 'ES5', 'ES6', 'ES2015', 'ES7', 'ES2016', 'ES2017', 'ES2018', 'ESNext', 'DOM', 'DOM.Iterable', 'WebWorker', 'ScriptHost', 'ES2015.Core', 'ES2015.Collection', 'ES2015.Generator', 'ES2015.Iterable', 'ES2015.Promise', 'ES2015.Proxy', 'ES2015.Reflect', 'ES2015.Symbol', 'ES2015.Symbol.WellKnown', 'ES2016.Array.Include', 'ES2017.object', 'ES2017.Intl', 'ES2017.SharedMemory', 'ES2017.String', 'ES2017.TypedArrays', 'ES2018.Intl', 'ES2018.Promise', 'ES2018.RegExp', 'ESNext.AsyncIterable', 'ESNext.Array', 'ESNext.Intl', 'ESNext.Symbol'. Requires TypeScript version 2.0 or later.",
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "enum": [
                      "DOM",
                      "DOM.Iterable",
                      "ES2015",
                      "ES2015.Collection",
                      "ES2015.Core",
                      "ES2015.Generator",
                      "ES2015.Iterable",
                      "ES2015.Promise",
                      "ES2015.Proxy",
                      "ES2015.Reflect",
                      "ES2015.Symbol",
                      "ES2015.Symbol.WellKnown",
                      "ES2016",
                      "ES2016.Array.Include",
                      "ES2017",
                      "ES2017.Intl",
                      "ES2017.Object",
                      "ES2017.SharedMemory",
                      "ES2017.String",
                      "ES2017.TypedArrays",
                      "ES2018",
                      "ES2018.AsyncIterable",
                      "ES2018.Intl",
                      "ES2018.Promise",
                      "ES2018.Regexp",
                      "ES2019",
                      "ES2019.Array",
                      "ES2019.Object",
                      "ES2019.String",
                      "ES2019.Symbol",
                      "ES2020",
                      "ES2020.String",
                      "ES2020.Symbol.WellKnown",
                      "ES5",
                      "ES6",
                      "ES7",
                      "ESNext",
                      "ESNext.Array",
                      "ESNext.AsyncIterable",
                      "ESNext.BigInt",
                      "ESNext.Intl",
                      "ESNext.Symbol",
                      "ScriptHost",
                      "WebWorker",
                      "WebWorker.ImportScripts"
                    ],
                    "type": "string"
                  }
                ]
              }
            },
            "strictNullChecks": {
              "description": "Enable strict null checks. Requires TypeScript version 2.0 or later.",
              "type": "boolean"
            },
            "maxNodeModuleJsDepth": {
              "description": "The maximum dependency depth to search under node_modules and load JavaScript files. Only applicable with --allowJs.",
              "type": "number"
            },
            "importHelpers": {
              "description": "Import emit helpers (e.g. '__extends', '__rest', etc..) from tslib. Requires TypeScript version 2.1 or later.",
              "type": "boolean"
            },
            "jsxFactory": {
              "description": "Specify the JSX factory function to use when targeting react JSX emit, e.g. 'React.createElement' or 'h'. Requires TypeScript version 2.1 or later.",
              "type": "string"
            },
            "alwaysStrict": {
              "description": "Parse in strict mode and emit 'use strict' for each source file. Requires TypeScript version 2.1 or later.",
              "type": "boolean"
            },
            "strict": {
              "description": "Enable all strict type checking options. Requires TypeScript version 2.3 or later.",
              "type": "boolean"
            },
            "strictBindCallApply": {
              "description": "Enable stricter checking of of the `bind`, `call`, and `apply` methods on functions.",
              "type": "boolean"
            },
            "downlevelIteration": {
              "description": "Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. Requires TypeScript version 2.3 or later.",
              "type": "boolean"
            },
            "checkJs": {
              "description": "Report errors in .js files. Requires TypeScript version 2.3 or later.",
              "type": "boolean"
            },
            "strictFunctionTypes": {
              "description": "Disable bivariant parameter checking for function types. Requires TypeScript version 2.6 or later.",
              "type": "boolean"
            },
            "strictPropertyInitialization": {
              "description": "Ensure non-undefined class properties are initialized in the constructor. Requires TypeScript version 2.7 or later.",
              "type": "boolean"
            },
            "esModuleInterop": {
              "description": "Emit '__importStar' and '__importDefault' helpers for runtime babel ecosystem compatibility and enable '--allowSyntheticDefaultImports' for typesystem compatibility. Requires TypeScript version 2.7 or later.",
              "type": "boolean"
            },
            "allowUmdGlobalAccess": {
              "description": "Allow accessing UMD globals from modules.",
              "type": "boolean"
            },
            "keyofStringsOnly": {
              "description": "Resolve 'keyof' to string valued property names only (no numbers or symbols). Requires TypeScript version 2.9 or later.",
              "type": "boolean"
            },
            "useDefineForClassFields": {
              "description": "Emit ECMAScript standard class fields. Requires TypeScript version 3.7 or later.",
              "type": "boolean"
            },
            "declarationMap": {
              "description": "Generates a sourcemap for each corresponding '.d.ts' file. Requires TypeScript version 2.9 or later.",
              "type": "boolean"
            },
            "resolveJsonModule": {
              "description": "Include modules imported with '.json' extension. Requires TypeScript version 2.9 or later.",
              "type": "boolean"
            }
          }
        },
        "schemaSettings": {
          "description": "Settings to pass to typescript-json-schema module",
          "$ref": "#/definitions/Partial<Args>"
        },
        "input": {
          "description": "TypeScript source file(s)",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "output": {
          "description": "Output descriptor(s) and filename(s)",
          "anyOf": [
            {
              "$ref": "#/definitions/OutputDescriptor"
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OutputDescriptor"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "symbol": {
          "description": "Targeted type name",
          "type": "string"
        }
      },
      "required": [
        "output",
        "symbol"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
